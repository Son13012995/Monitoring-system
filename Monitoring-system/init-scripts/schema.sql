CREATE DATABASE IF NOT EXISTS energy_management;
USE energy_management;

-- =======================================
-- üåü H·ªá th·ªëng Qu·∫£n l√Ω NƒÉng l∆∞·ª£ng Ti√™u th·ª•
-- =======================================

-- T·∫°o c∆° s·ªü d·ªØ li·ªáu
CREATE DATABASE IF NOT EXISTS energy_management;
USE energy_management;

-- =======================================
-- üõÉÔ∏è T·∫°o B·∫£ng
-- =======================================

-- B·∫£ng SmartOutlet: l∆∞u th√¥ng tin thi·∫øt b·ªã ƒëi·ªán th√¥ng minh
CREATE TABLE SmartOutlet (
                             id INT AUTO_INCREMENT PRIMARY KEY,
                             name VARCHAR(255) NOT NULL
);

-- B·∫£ng RawLog: l∆∞u d·ªØ li·ªáu th√¥ t·ª´ thi·∫øt b·ªã
CREATE TABLE RawLog (
                        log_id INT AUTO_INCREMENT PRIMARY KEY,
                        outlet_id INT,
                        power FLOAT NOT NULL,
                        timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,
                        FOREIGN KEY (outlet_id) REFERENCES SmartOutlet(id) ON DELETE CASCADE
);

-- B·∫£ng AggregatedLog: l∆∞u d·ªØ li·ªáu t·ªïng h·ª£p
CREATE TABLE AggregatedLog (
                               log_id INT AUTO_INCREMENT PRIMARY KEY,
                               outlet_id INT,
                               min_power FLOAT,
                               max_power FLOAT,
                               avg_power FLOAT,
                               timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,
                               FOREIGN KEY (outlet_id) REFERENCES SmartOutlet(id) ON DELETE CASCADE
);

-- =======================================
-- ‚ö° T·∫°o Ch·ªâ m·ª•c
-- =======================================
CREATE INDEX idx_rawlog_outlet ON RawLog(outlet_id, timestamp);
CREATE INDEX idx_aggregatedlog_outlet ON AggregatedLog(outlet_id, timestamp);

-- =======================================
-- üöÄ T·∫°o Trigger
-- =======================================
INSERT INTO SmartOutlet (name) VALUES ('New Device');

-- Trigger n√©n d·ªØ li·ªáu t·ª´ RawLog sang AggregatedLog sau m·ªói 60 b·∫£n ghi
DELIMITER //
CREATE TRIGGER compress_rawlog AFTER INSERT ON RawLog
    FOR EACH ROW
BEGIN
    IF (SELECT COUNT(*) FROM RawLog) % 60 = 0 THEN
        INSERT INTO AggregatedLog (outlet_id, min_power, max_power, avg_power, timestamp)
    SELECT outlet_id, MIN(power), MAX(power), AVG(power), DATE_FORMAT(timestamp, '%Y-%m-%d %H:%i:00')
    FROM RawLog
    GROUP BY outlet_id, DATE_FORMAT(timestamp, '%Y-%m-%d %H:%i:00');
END IF;
END //
DELIMITER ;

-- =======================================
-- üß™ T·∫°o Th·ªß t·ª•c ki·ªÉm tra (Test Procedure)
-- =======================================

-- Th·ªß t·ª•c th√™m 60 b·∫£n ghi t·ª± ƒë·ªông v√†o RawLog
DELIMITER //
CREATE PROCEDURE insert_60_rawlog(IN outlet_id INT)
BEGIN
    DECLARE i INT DEFAULT 1;

    -- N·∫øu outlet_id l√† NULL, g√°n gi√° tr·ªã m·∫∑c ƒë·ªãnh l√† 1
    IF outlet_id IS NULL THEN
        SET outlet_id = 1;
END IF;

    WHILE i <= 60 DO
        INSERT INTO RawLog (outlet_id, power)
        VALUES (outlet_id, FLOOR(RAND() * 100));
        SET i = i + 1;
END WHILE;
END //
DELIMITER ;


-- =======================================
-- üìù Ki·ªÉm tra Trigger N√©n D·ªØ li·ªáu
-- =======================================
CALL insert_60_rawlog(1);
SELECT * FROM RawLog;

-- Ki·ªÉm tra d·ªØ li·ªáu n√©n trong b·∫£ng AggregatedLog
SELECT * FROM AggregatedLog;

-- =======================================
-- üìù Ki·ªÉm tra D·ªØ li·ªáu T·ªïng h·ª£p
-- =======================================

-- Th√™m thi·∫øt b·ªã m·ªõi v√† ki·ªÉm tra
INSERT INTO SmartOutlet (name) VALUES ('Device A');
CALL insert_60_rawlog(2);

-- Ki·ªÉm tra k·∫øt qu·∫£ t·ªïng h·ª£p
SELECT outlet_id, MIN(power), MAX(power), AVG(power)
FROM RawLog
WHERE outlet_id = 2
GROUP BY outlet_id;

SELECT min_power, max_power, avg_power
FROM AggregatedLog
WHERE outlet_id = 2;

-- =======================================
-- üìù Ki·ªÉm tra T·ªïng h·ª£p Nhi·ªÅu Thi·∫øt b·ªã
-- =======================================

-- Th√™m nhi·ªÅu thi·∫øt b·ªã
INSERT INTO SmartOutlet (name) VALUES ('Device B'), ('Device C'), ('Device D');

-- Th√™m d·ªØ li·ªáu v√† ki·ªÉm tra
CALL insert_60_rawlog(3);
CALL insert_60_rawlog(4);
CALL insert_60_rawlog(5);

-- Ki·ªÉm tra d·ªØ li·ªáu t·ªïng h·ª£p
SELECT outlet_id, COUNT(*) AS AggregatedLogs
FROM AggregatedLog
GROUP BY outlet_id;

-- =======================================
-- üßπ X√≥a D·ªØ li·ªáu (D·ªçn D·∫πp)
-- =======================================

-- X√≥a t·∫•t c·∫£ d·ªØ li·ªáu trong b·∫£ng RawLog
DELETE FROM RawLog;
ALTER TABLE RawLog AUTO_INCREMENT = 1;

-- X√≥a t·∫•t c·∫£ d·ªØ li·ªáu trong b·∫£ng AggregatedLog
DELETE FROM AggregatedLog;
ALTER TABLE AggregatedLog AUTO_INCREMENT = 1;

-- X√≥a t·∫•t c·∫£ d·ªØ li·ªáu trong b·∫£ng SmartOutlet
DELETE FROM SmartOutlet;
ALTER TABLE SmartOutlet AUTO_INCREMENT = 1;

-- Ho√†n t·∫•t!
SELECT '‚úîÔ∏è Qu·∫£n l√Ω nƒÉng l∆∞·ª£ng ti√™u th·ª• - Thi·∫øt l·∫≠p ho√†n t·∫•t!' AS Status;



